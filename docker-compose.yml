version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: leadnest
      POSTGRES_USER: leadnest_user
      POSTGRES_PASSWORD: leadnest_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U leadnest_user -d leadnest"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Backend API
  backend:
    build: 
      context: .
      target: backend
    environment:
      - DATABASE_URL=REDACTED_DATABASE_URL
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-development-secret-key-here
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - YELP_API_KEY=${YELP_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - ENVIRONMENT=development
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Frontend (for local development)
  frontend:
    build:
      context: .
      target: frontend-build
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_STRIPE_PUBLISHABLE_KEY=${REACT_APP_STRIPE_PUBLISHABLE_KEY}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
